services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
      - DB_SYNCHRONIZE=true
    volumes:
      - ./backend:/app
      - /app/node_modules  # Exclude node_modules from volume mount
    command: npm run start:dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - '5432:5432'
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

volumes:
  pgdata:
